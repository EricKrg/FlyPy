version: '2.2'
services:
  nginx_app:
    container_name: nginx_container
    restart: always
    image: nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile

    ports:
      - "4200:80"
      - "443:443"
    depends_on:
      - flask_app
    networks:
      - esnet


  flask_app:
      container_name: flask_container
      restart: always
      image: flask
      build:
        context: .
        dockerfile: flask/Dockerfile
      ports:
        - "5000:5000"
      volumes:
        - ./server:/usr/src/app/serverf
      hostname: flask.service.intra
      networks:
        - esnet

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    container_name: es01
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    hostname: es.service.intra
    networks:
       - esnet

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    container_name: es02
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - esnet

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local

networks:
  esnet:
    driver: bridge